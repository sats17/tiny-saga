version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092" # Outside of docker network can access using this port. Such as local machine java app.
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  wallet_ms:
    image: tiny-saga-wallet-ms
    ports:
      - "8086:8086"
    depends_on:
      - kafka
    command: ["./wait-for-it.sh", "kafka:9092", "--", "python", "app.py"]  # Adjust your command accordingly
    networks:
      - kafka-network

  payment_ms:
    image: tiny-saga-payment-ms
    ports:
      - "8087:8087"
    depends_on:
      - kafka
    command: ["./wait-for-it.sh", "kafka:9092", "--", "python", "app.py"]  # Adjust your command accordingly
    networks:
      - kafka-network

  inventory_ms:
    image: tiny-saga-inventory-ms
    ports:
      - "8088:8088"
    depends_on:
      - kafka
    command: ["./wait-for-it.sh", "kafka:9092", "--", "python", "app.py"]  # Adjust your command accordingly
    networks:
      - kafka-network

  order_ms:
    image: tiny-saga-order-ms
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    command: ["./wait-for-it.sh", "kafka:9092", "--", "python", "app.py"]  # Adjust your command accordingly
    networks:
      - kafka-network

  orchestrator_ms:
    image: tiny-saga-orchestrator-ms
    ports:
      - "8084:8084"
    depends_on:
      - kafka
    command: ["./wait-for-it.sh", "kafka:9092", "--", "python", "app.py"]  # Adjust your command accordingly
    networks:
      - kafka-network
    environment:
      PAYMENT_HOST: payment_ms
      INVENTORY_HOST: inventory_ms
      ORDER_HOST: order_ms

networks:
  kafka-network:
