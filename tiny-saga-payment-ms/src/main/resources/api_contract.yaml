openapi: 3.0.3
info:
  title: Payment API
  version: 1.0.0
paths:
  /v2/api/payment/dev/healthcheck:
    get:
      summary: Get Health Check
      responses:
        '200':
          description: OK
          content:
            text/plain:
              example: 'ok ok health from transaction'
  /v2/api/payment/dev/transactions:
    get:
      summary: Get All Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: |
                [
                  {
                    "id": 1,
                    "amount": 100.0,
                    "orderId": "ABC123",
                    "timestamp": "2024-02-03T12:34:56Z"
                  },
                  {
                    "id": 2,
                    "amount": 150.0,
                    "orderId": "XYZ789",
                    "timestamp": "2024-02-03T13:45:00Z"
                  }
                ]
  /v2/api/payment/dev/transactions/order:
    get:
      summary: Get Transactions for Order
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: string
          example: ABC123
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: |
                [
                  {
                    "id": 1,
                    "amount": 100.0,
                    "orderId": "ABC123",
                    "timestamp": "2024-02-03T12:34:56Z"
                  }
                ]
  /v2/api/payment/order/pay:
    post:
      summary: Process Payment For Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProcessRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              example: |
               {
                  "status": 200,
                  "responseMessage": "Payment processed succesfully"
                }
        '401':
          description: Authorization error
          content:
            application/json:
              example: |
                {
                  "status": 401,
                  "responseMessage": "Authorization exception occured"
                }
        '500':
          description: Server error
          content:
            application/json:
              example: |
                {
                  "status": 500,
                  "responseMessage": "Server error occured"
                }
          
components:
  schemas:
    PaymentProcessRequest:
      type: object
      properties:
        correlationId:
          type: string
        orderId:
          type: string
        userId:
          type: string
        orderStatus:
          type: string
          enum:
            - INITIATED
            - INITIATED
            - ORDER_DELIEVERED
            - ORDER_FAIL
        paymentProcessType:
          type: string
          enum:
            - PAY
            - REFUND
        paymentType:
          type: string
          enum:
            - Wallet
            - PAYPAL
        productId:
          type: string
        productQuantity:
          type: integer
        price:
          type: integer
        paymentFailReason:
          type: string